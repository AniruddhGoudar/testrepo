/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Customer;

import Business.Business;
import Business.Customers.CustomersSeller;
import Business.Customers.CustomersSellerDirectory;
import Business.Executives.ExecutiveCases;
import Business.Executives.ExecutiveCasesDirectory;
import Business.UserAccountManagement.UserAccount;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author bindupagad
 */
public class SellerHistoryJPanel extends javax.swing.JPanel {

    /**
     * Creates new form SellerHistoryJPanel
     */
    JPanel workAreaMain;
    Business business;
    UserAccount userAcc;
    CustomersSellerDirectory custSellerDirectory;
        ExecutiveCasesDirectory exeCasesDirectory;


    public SellerHistoryJPanel(JPanel workAreaMain, Business business, UserAccount userAcc) {
        initComponents();
        this.workAreaMain = workAreaMain;
        this.business = business;
        this.userAcc = userAcc;
        custSellerDirectory = business.getCustomersSellerDirectory();
        exeCasesDirectory = business.getExeCasesDirectory();
        showSellHistory();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblCarBuy = new javax.swing.JTable();
        lblPriceChange = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        btnWithdraw = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnConfirm = new javax.swing.JButton();

        tblCarBuy.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "CarId", "Company", "Car Model", "Selling Price in $", "Status", "Comments"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCarBuy);
        if (tblCarBuy.getColumnModel().getColumnCount() > 0) {
            tblCarBuy.getColumnModel().getColumn(0).setResizable(false);
            tblCarBuy.getColumnModel().getColumn(1).setResizable(false);
            tblCarBuy.getColumnModel().getColumn(2).setResizable(false);
            tblCarBuy.getColumnModel().getColumn(3).setResizable(false);
            tblCarBuy.getColumnModel().getColumn(4).setResizable(false);
        }

        lblPriceChange.setText("Price Change");

        txtPrice.setEnabled(false);

        btnWithdraw.setText("Withdraw");
        btnWithdraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWithdrawActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnConfirm.setText("Confirm Price");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(476, 476, 476)
                .addComponent(lblPriceChange)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnConfirm)
                .addGap(0, 67, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(482, 482, 482)
                        .addComponent(btnWithdraw)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnUpdate))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPriceChange)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConfirm))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnWithdraw)
                    .addComponent(btnUpdate))
                .addContainerGap(234, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblCarBuy.getSelectedRow();
        
        String sellPrice = txtPrice.getText();
        DefaultTableModel model = (DefaultTableModel) tblCarBuy.getModel();
        String carId = (String) model.getValueAt(selectedRowIndex, 0);
        
        System.out.println("carId "+carId);
        
            ExecutiveCases exeCus = exeCasesDirectory.getExecutiveCases().stream()
                    .filter(it -> it.getCarId().equals(carId))
                    .findFirst() 
                    .orElse(null);
            
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select the car from table to update");
        } else if(exeCus.getStatus().equals("Accepted") || exeCus.getStatus().equals("Rejected")){
            JOptionPane.showMessageDialog(this, "Quotation you submitted is " + exeCus.getStatus());
        }
        else {
            txtPrice.setEnabled(true);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        // TODO add your handling code here:
 int selectedRowIndex = tblCarBuy.getSelectedRow();
        String sellPrice = txtPrice.getText();
        DefaultTableModel model = (DefaultTableModel) tblCarBuy.getModel();
        String carId = (String) model.getValueAt(selectedRowIndex, 0);
        
        System.out.println("carId "+carId);
        
            CustomersSeller custSeller = custSellerDirectory.getCustomersSeller().stream()
                    .filter(it -> it.getUniqueId().equals(carId))
                    .findFirst() 
                    .orElse(null);
            
            System.out.println("Seller info"+custSeller.getSellingPrice());
            
        custSeller.setSellingPrice(sellPrice);
        
        JOptionPane.showMessageDialog(this, "Selling price updated");
        showSellHistory();
        
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void btnWithdrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWithdrawActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tblCarBuy.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select the car from table to withdraw");
        } else {
            DefaultTableModel model = (DefaultTableModel) tblCarBuy.getModel();
            String carId = (String) model.getValueAt(selectedRowIndex, 1);
            CustomersSeller custSeller = custSellerDirectory.getCustomersSeller().stream()
                    .filter(it -> it.getUniqueId().equals(carId))
                    .findFirst() 
                    .orElse(null);
            custSellerDirectory.removeCustomersSeller(custSeller);
        }
    }//GEN-LAST:event_btnWithdrawActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnWithdraw;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPriceChange;
    private javax.swing.JTable tblCarBuy;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables

    private void showSellHistory() {
        DefaultTableModel model = (DefaultTableModel) tblCarBuy.getModel();
        model.setRowCount(0);
        System.out.println("in seller hist" + userAcc.getUsername());

        if (exeCasesDirectory.getExecutiveCases() != null && !exeCasesDirectory.getExecutiveCases().isEmpty()) {
            for (CustomersSeller c : custSellerDirectory.getCustomersSeller()) {
                for (ExecutiveCases e : exeCasesDirectory.getExecutiveCases()) {
                    Object row[] = new Object[6];

                    if (c.getType().equals("Seller") && c.getUniqueId().equals(e.getCarId())) {
                        row[0] = c.getUniqueId();
                        row[1] = c.getCarCompany();
                        row[2] = c.getCarModel();
                        row[3] = c.getSellingPrice();
                        row[4] = e.getStatus();
                        row[5] = e.getComments();
                        model.addRow(row);
                    }
                }
            }
        } else {
            for (CustomersSeller c : custSellerDirectory.getCustomersSeller()) {

                Object row[] = new Object[6];

                System.out.println("c.getType()" + c.getType());

                if (c.getType().equals("Seller")) {
                    row[0] = c.getUniqueId();
                    row[1] = c.getCarCompany();
                    row[2] = c.getCarModel();
                    row[3] = c.getSellingPrice();
                    row[4] = "Submitted to Agents";
                    row[5] = "No comments yet";
                    model.addRow(row);
                }
            }
        }
    }
}
